{
  "__inputs": [
    {
      "name": "DS_VICTORIAMETRICS",
      "label": "VictoriaMetrics",
      "description": "",
      "type": "datasource",
      "pluginId": "prometheus",
      "pluginName": "Prometheus"
    }
  ],
  "__elements": {},
  "__requires": [
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "9.0.9"
    },
    {
      "type": "panel",
      "id": "heatmap-new",
      "name": "Heatmap (new)",
      "version": ""
    },
    {
      "type": "datasource",
      "id": "prometheus",
      "name": "Prometheus",
      "version": "1.0.0"
    },
    {
      "type": "panel",
      "id": "text",
      "name": "Text",
      "version": ""
    },
    {
      "type": "panel",
      "id": "timeseries",
      "name": "Time series",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "description": "",
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": null,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 33,
      "panels": [],
      "title": "Summary",
      "type": "row"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_VICTORIAMETRICS}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 1
      },
      "id": 29,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "sum without(instance, sfs_hostname) (rate(request_size_bytes_count{nsid=\"$nsid\", cluster=\"$cluster\",job=\"sfs-client\"}[$__rate_interval])) or sum without (instance, sfs_hostname) (rate(sfs_rpc_request_size_bytes_count{nsid=\"$nsid\", cluster=\"$cluster\",job=\"sfs-client\"}[$__rate_interval]))",
          "instant": false,
          "legendFormat": "{{method}}",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "Total request rate",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_VICTORIAMETRICS}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ms"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 1
      },
      "id": 193,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "avg without (instance, sfs_hostname) ((rate(request_latency_ns_sum{cluster=~\"$cluster\",nsid=\"$nsid\",job=\"sfs-client\"}[$__rate_interval])/rate(request_latency_ns_count[$__rate_interval]) / 1000000)) or avg without (instance, sfs_hostname) ((rate(request_latency_ms_sum{cluster=~\"$cluster\",nsid=\"$nsid\",job=\"sfs-client\"}[$__rate_interval])/rate(request_latency_ms_count[$__rate_interval]))) or avg without (instance, sfs_hostname) ((rate(sfs_rpc_response_duration_sum{cluster=~\"$cluster\",nsid=\"$nsid\",job=\"sfs-client\"}[$__rate_interval])/rate(sfs_rpc_response_duration_count[$__rate_interval])))",
          "instant": false,
          "legendFormat": "{{method}}",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "Request average latency",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_VICTORIAMETRICS}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "Bps"
        },
        "overrides": [
          {
            "__systemRef": "hideSeriesFrom",
            "matcher": {
              "id": "byNames",
              "options": {
                "mode": "exclude",
                "names": ["READ"],
                "prefix": "All except:",
                "readOnly": true
              }
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": false,
                  "tooltip": false,
                  "viz": true
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 9
      },
      "id": 37,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "sum without (instance, sfs_hostname) (rate(request_size_bytes_sum{cluster=\"$cluster\", method=\"READ\", nsid=\"$nsid\",job=\"sfs-client\"}[$__rate_interval])) or sum without (instance, sfs_hostname) (rate(sfs_rpc_request_size_bytes_sum{cluster=\"$cluster\", method=\"READ\", nsid=\"$nsid\",job=\"sfs-client\"}[$__rate_interval]))",
          "legendFormat": "{{method}}",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "sum without (instance, sfs_hostname) (rate(request_size_bytes_sum{cluster=\"$cluster\", method=\"WRITE\", nsid=\"$nsid\",job=\"sfs-client\"}[$__rate_interval])) or sum without (instance, sfs_hostname) (rate(sfs_rpc_request_size_bytes_sum{cluster=\"$cluster\", method=\"WRITE\", nsid=\"$nsid\",job=\"sfs-client\"}[$__rate_interval]))",
          "hide": false,
          "legendFormat": "{{method}}",
          "range": true,
          "refId": "B"
        }
      ],
      "title": "Total throughput (Bytes/s)",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_VICTORIAMETRICS}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 9
      },
      "id": 65,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "sum(request_concurrency{cluster=\"$cluster\", job=\"sfs-client\", nsid=\"$nsid\"}) or sum(sfs_rpc_inflight_count{cluster=\"$cluster\", job=\"sfs-client\", nsid=\"$nsid\"})",
          "instant": false,
          "legendFormat": "Inflight",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "PRCs in flight",
      "type": "timeseries"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 17
      },
      "id": 52,
      "panels": [],
      "title": "Latency",
      "type": "row"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_VICTORIAMETRICS}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ms"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 18
      },
      "id": 145,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.01, sum without(instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.01, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.01, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=~\"$cluster\",nsid=\"$nsid\",job=\"sfs-client\"}[$__rate_interval])))",
          "legendFormat": "{{method}}",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "1% latency",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_VICTORIAMETRICS}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ms"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 18
      },
      "id": 172,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.90, sum without(instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.90, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.90, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=~\"$cluster\",nsid=\"$nsid\",job=\"sfs-client\"}[$__rate_interval])))",
          "legendFormat": "{{method}}",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "90% latency",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_VICTORIAMETRICS}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ms"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 26
      },
      "id": 35,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.50, sum without(instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.50, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.50, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=~\"$cluster\",nsid=\"$nsid\",job=\"sfs-client\"}[$__rate_interval])))",
          "legendFormat": "{{method}}",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "Mean(50%) latency",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_VICTORIAMETRICS}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ms"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 26
      },
      "id": 173,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.95, sum without(instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.95, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.95, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=~\"$cluster\",nsid=\"$nsid\",job=\"sfs-client\"}[$__rate_interval])))",
          "legendFormat": "{{method}}",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "95% latency",
      "type": "timeseries"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 34
      },
      "id": 34,
      "panels": [],
      "title": "Latency distributions",
      "type": "row"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_VICTORIAMETRICS}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ms"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 35
      },
      "id": 174,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.01, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"READ\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.01, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"READ\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.01, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"READ\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "1%",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.10, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"READ\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.10, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"READ\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.10, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"READ\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "10%",
          "range": true,
          "refId": "B"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.20, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"READ\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.20, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"READ\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.20, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"READ\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "20%",
          "range": true,
          "refId": "C"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.30, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"READ\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.30, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"READ\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.30, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"READ\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "30%",
          "range": true,
          "refId": "D"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.40, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"READ\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.40, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"READ\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.40, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"READ\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "40%",
          "range": true,
          "refId": "E"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.50, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"READ\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.50, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"READ\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.50, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"READ\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "50%",
          "range": true,
          "refId": "F"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.60, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"READ\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.60, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"READ\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.60, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"READ\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "60%",
          "range": true,
          "refId": "G"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.70, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"READ\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.70, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"READ\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.70, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"READ\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": true,
          "legendFormat": "70%",
          "range": true,
          "refId": "H"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.80, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"READ\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.80, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"READ\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.80, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"READ\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "80%",
          "range": true,
          "refId": "I"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.90, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"READ\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.90, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"READ\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.90, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"READ\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "90%",
          "range": true,
          "refId": "J"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.95, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"READ\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.95, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"READ\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.95, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"READ\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "95%",
          "range": true,
          "refId": "K"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.99, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"READ\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.99, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"READ\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.99, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"READ\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "99%",
          "range": true,
          "refId": "L"
        }
      ],
      "title": "Read latency distribution",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_VICTORIAMETRICS}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ms"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 35
      },
      "id": 175,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.01, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"WRITE\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.01, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"WRITE\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.01, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"WRITE\", job=\"sfs-client\"}[$__rate_interval])))",
          "legendFormat": "1%",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.10, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"WRITE\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.10, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"WRITE\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.10, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"WRITE\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "10%",
          "range": true,
          "refId": "B"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.20, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"WRITE\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.20, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"WRITE\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.20, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"WRITE\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "20%",
          "range": true,
          "refId": "C"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.30, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"WRITE\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.30, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"WRITE\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.30, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"WRITE\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "30%",
          "range": true,
          "refId": "D"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.40, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"WRITE\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.40, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"WRITE\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.40, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"WRITE\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "40%",
          "range": true,
          "refId": "E"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.50, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"WRITE\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.50, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"WRITE\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.50, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"WRITE\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "50%",
          "range": true,
          "refId": "F"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.60, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"WRITE\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.60, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"WRITE\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.60, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"WRITE\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "60%",
          "range": true,
          "refId": "G"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.70, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"WRITE\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.70, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"WRITE\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.70, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"WRITE\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "70%",
          "range": true,
          "refId": "H"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.80, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"WRITE\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.80, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"WRITE\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.80, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"WRITE\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "80%",
          "range": true,
          "refId": "I"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.90, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"WRITE\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.90, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"WRITE\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.90, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"WRITE\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "90%",
          "range": true,
          "refId": "J"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.95, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"WRITE\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.95, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"WRITE\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.95, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"WRITE\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "95%",
          "range": true,
          "refId": "K"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.99, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"WRITE\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.99, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"WRITE\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.99, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"WRITE\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "99%",
          "range": true,
          "refId": "L"
        }
      ],
      "title": "Write latency distribution",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_VICTORIAMETRICS}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ms"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 43
      },
      "id": 176,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.01, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"GETATTR\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.01, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"GETATTR\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.01, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"GETATTR\", job=\"sfs-client\"}[$__rate_interval])))",
          "legendFormat": "1%",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.10, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"GETATTR\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.10, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"GETATTR\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.10, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"GETATTR\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "10%",
          "range": true,
          "refId": "B"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.20, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"GETATTR\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.20, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"GETATTR\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.20, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"GETATTR\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "20%",
          "range": true,
          "refId": "C"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.30, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"GETATTR\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.30, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"GETATTR\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.30, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"GETATTR\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "30%",
          "range": true,
          "refId": "D"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.40, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"GETATTR\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.40, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"GETATTR\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.40, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"GETATTR\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "40%",
          "range": true,
          "refId": "E"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.50, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"GETATTR\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.50, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"GETATTR\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.50, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"GETATTR\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "50%",
          "range": true,
          "refId": "F"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.60, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"GETATTR\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.60, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"GETATTR\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.60, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"GETATTR\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "60%",
          "range": true,
          "refId": "G"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.70, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"GETATTR\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.70, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"GETATTR\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.70, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"GETATTR\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "70%",
          "range": true,
          "refId": "H"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.80, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"GETATTR\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.80, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"GETATTR\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.80, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"GETATTR\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "80%",
          "range": true,
          "refId": "I"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.90, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"GETATTR\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.90, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"GETATTR\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.90, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"GETATTR\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "90%",
          "range": true,
          "refId": "J"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.95, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"GETATTR\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.95, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"GETATTR\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.95, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"GETATTR\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "95%",
          "range": true,
          "refId": "K"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.99, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"GETATTR\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.99, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"GETATTR\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.99, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"GETATTR\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "99%",
          "range": true,
          "refId": "L"
        }
      ],
      "title": "Getattr latency distribution",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_VICTORIAMETRICS}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ms"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 43
      },
      "id": 177,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.01, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"LOOKUP\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.01, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"LOOKUP\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.01, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"LOOKUP\", job=\"sfs-client\"}[$__rate_interval])))",
          "legendFormat": "1%",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.10, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"LOOKUP\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.10, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"LOOKUP\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.10, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"LOOKUP\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "10%",
          "range": true,
          "refId": "B"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.20, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"LOOKUP\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.20, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"LOOKUP\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.20, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"LOOKUP\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "20%",
          "range": true,
          "refId": "C"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.30, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"LOOKUP\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.30, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"LOOKUP\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.30, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"LOOKUP\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "30%",
          "range": true,
          "refId": "D"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.40, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"LOOKUP\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.40, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"LOOKUP\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.40, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"LOOKUP\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "40%",
          "range": true,
          "refId": "E"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.50, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"LOOKUP\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.50, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"LOOKUP\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.50, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"LOOKUP\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "50%",
          "range": true,
          "refId": "F"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.60, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"LOOKUP\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.60, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"LOOKUP\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.60, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"LOOKUP\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "60%",
          "range": true,
          "refId": "G"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.70, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"LOOKUP\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.70, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"LOOKUP\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.70, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"LOOKUP\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "70%",
          "range": true,
          "refId": "H"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.80, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"LOOKUP\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.80, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"LOOKUP\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.80, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"LOOKUP\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "80%",
          "range": true,
          "refId": "I"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.90, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"LOOKUP\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.90, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"LOOKUP\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.90, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"LOOKUP\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "90%",
          "range": true,
          "refId": "J"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.95, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"LOOKUP\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.95, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"LOOKUP\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.95, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"LOOKUP\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "95%",
          "range": true,
          "refId": "K"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.99, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"LOOKUP\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.99, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"LOOKUP\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.99, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"LOOKUP\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "99%",
          "range": true,
          "refId": "L"
        }
      ],
      "title": "Lookup latency distribution",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_VICTORIAMETRICS}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ms"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 51
      },
      "id": 178,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.01, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"FSYNC\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.01, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"FSYNC\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.01, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"FSYNC\", job=\"sfs-client\"}[$__rate_interval])))",
          "legendFormat": "1%",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.10, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"FSYNC\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.10, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"FSYNC\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.10, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"FSYNC\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "10%",
          "range": true,
          "refId": "B"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.20, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"FSYNC\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.20, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"FSYNC\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.20, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"FSYNC\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "20%",
          "range": true,
          "refId": "C"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.30, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"FSYNC\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.30, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"FSYNC\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.30, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"FSYNC\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "30%",
          "range": true,
          "refId": "D"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.40, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"FSYNC\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.40, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"FSYNC\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.40, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"FSYNC\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "40%",
          "range": true,
          "refId": "E"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.50, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"FSYNC\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.50, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"FSYNC\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.50, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"FSYNC\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "50%",
          "range": true,
          "refId": "F"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.60, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"FSYNC\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.60, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"FSYNC\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.60, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"FSYNC\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "60%",
          "range": true,
          "refId": "G"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.70, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"FSYNC\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.70, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"FSYNC\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.70, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"FSYNC\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "70%",
          "range": true,
          "refId": "H"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.80, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"FSYNC\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.80, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"FSYNC\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.80, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"FSYNC\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "80%",
          "range": true,
          "refId": "I"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.90, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"FSYNC\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.90, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"FSYNC\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.90, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"FSYNC\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "90%",
          "range": true,
          "refId": "J"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.95, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"FSYNC\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.95, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"FSYNC\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.95, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"FSYNC\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "95%",
          "range": true,
          "refId": "K"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.99, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"FSYNC\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.99, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"FSYNC\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.99, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"FSYNC\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "99%",
          "range": true,
          "refId": "L"
        }
      ],
      "title": "Fsync latency distribution",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_VICTORIAMETRICS}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ms"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 51
      },
      "id": 179,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.01, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"CREATE\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.01, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"CREATE\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.01, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"CREATE\", job=\"sfs-client\"}[$__rate_interval])))",
          "legendFormat": "1%",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.10, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"CREATE\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.10, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"CREATE\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.10, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"CREATE\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "10%",
          "range": true,
          "refId": "B"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.20, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"CREATE\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.20, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"CREATE\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.20, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"CREATE\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "20%",
          "range": true,
          "refId": "C"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.30, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"CREATE\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.30, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"CREATE\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.30, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"CREATE\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "30%",
          "range": true,
          "refId": "D"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.40, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"CREATE\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.40, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"CREATE\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.40, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"CREATE\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "40%",
          "range": true,
          "refId": "E"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.50, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"CREATE\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.50, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"CREATE\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.50, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"CREATE\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "50%",
          "range": true,
          "refId": "F"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.60, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"CREATE\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.60, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"CREATE\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.60, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"CREATE\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "60%",
          "range": true,
          "refId": "G"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.70, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"CREATE\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.70, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"CREATE\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.70, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"CREATE\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "70%",
          "range": true,
          "refId": "H"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.80, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"CREATE\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.80, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"CREATE\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.80, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"CREATE\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "80%",
          "range": true,
          "refId": "I"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.90, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"CREATE\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.90, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"CREATE\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.90, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"CREATE\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "90%",
          "range": true,
          "refId": "J"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.95, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"CREATE\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.95, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"CREATE\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.95, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"CREATE\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "95%",
          "range": true,
          "refId": "K"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.30, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"CREATE\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.30, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"CREATE\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.30, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"CREATE\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "99%",
          "range": true,
          "refId": "L"
        }
      ],
      "title": "Create latency distribution",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_VICTORIAMETRICS}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ms"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 59
      },
      "id": 180,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.01, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"MKDIR\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.01, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"MKDIR\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.01, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"MKDIR\", job=\"sfs-client\"}[$__rate_interval])))",
          "legendFormat": "1%",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.10, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"MKDIR\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.10, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"MKDIR\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.10, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"MKDIR\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "10%",
          "range": true,
          "refId": "B"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.20, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"MKDIR\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.20, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"MKDIR\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.20, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"MKDIR\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "20%",
          "range": true,
          "refId": "C"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.30, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"MKDIR\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.30, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"MKDIR\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.30, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"MKDIR\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "30%",
          "range": true,
          "refId": "D"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.40, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"MKDIR\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.40, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"MKDIR\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.40, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"MKDIR\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "40%",
          "range": true,
          "refId": "E"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.50, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"MKDIR\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.50, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"MKDIR\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.50, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"MKDIR\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "50%",
          "range": true,
          "refId": "F"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.60, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"MKDIR\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.60, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"MKDIR\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.60, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"MKDIR\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "60%",
          "range": true,
          "refId": "G"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.70, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"MKDIR\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.70, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"MKDIR\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.70, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"MKDIR\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "70%",
          "range": true,
          "refId": "H"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.80, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"MKDIR\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.80, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"MKDIR\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.80, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"MKDIR\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "80%",
          "range": true,
          "refId": "I"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.90, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"MKDIR\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.90, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"MKDIR\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.90, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"MKDIR\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "90%",
          "range": true,
          "refId": "J"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.95, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"MKDIR\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.95, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"MKDIR\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.95, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"MKDIR\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "95%",
          "range": true,
          "refId": "K"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.99, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"MKDIR\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.99, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"MKDIR\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.99, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"MKDIR\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "99%",
          "range": true,
          "refId": "L"
        }
      ],
      "title": "Mkdir latency distribution",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_VICTORIAMETRICS}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ms"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 59
      },
      "id": 181,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.01, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"SETATTR\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.01, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"SETATTR\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.01, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"SETATTR\", job=\"sfs-client\"}[$__rate_interval])))",
          "legendFormat": "1%",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.10, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"SETATTR\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.10, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"SETATTR\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.10, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"SETATTR\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "10%",
          "range": true,
          "refId": "B"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.20, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"SETATTR\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.20, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"SETATTR\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.20, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"SETATTR\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "20%",
          "range": true,
          "refId": "C"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.30, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"SETATTR\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.30, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"SETATTR\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.30, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"SETATTR\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "30%",
          "range": true,
          "refId": "D"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.40, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"SETATTR\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.40, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"SETATTR\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.40, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"SETATTR\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "40%",
          "range": true,
          "refId": "E"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.50, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"SETATTR\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.50, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"SETATTR\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.50, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"SETATTR\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "50%",
          "range": true,
          "refId": "F"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.60, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"SETATTR\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.60, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"SETATTR\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.60, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"SETATTR\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "60%",
          "range": true,
          "refId": "G"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.70, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"SETATTR\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.70, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"SETATTR\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.70, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"SETATTR\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "70%",
          "range": true,
          "refId": "H"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.80, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"SETATTR\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.80, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"SETATTR\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.80, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"SETATTR\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "80%",
          "range": true,
          "refId": "I"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.90, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"SETATTR\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.90, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"SETATTR\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.90, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"SETATTR\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "90%",
          "range": true,
          "refId": "J"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.95, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"SETATTR\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.95, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"SETATTR\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.95, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"SETATTR\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "95%",
          "range": true,
          "refId": "K"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.99, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"SETATTR\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.99, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"SETATTR\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.99, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"SETATTR\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "99%",
          "range": true,
          "refId": "L"
        }
      ],
      "title": "Setattr latency distribution",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_VICTORIAMETRICS}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ms"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 67
      },
      "id": 182,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.01, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RENAME\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.01, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RENAME\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.01, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RENAME\", job=\"sfs-client\"}[$__rate_interval])))",
          "legendFormat": "1%",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.10, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RENAME\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.10, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RENAME\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.10, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RENAME\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "10%",
          "range": true,
          "refId": "B"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.20, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RENAME\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.20, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RENAME\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.20, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RENAME\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "20%",
          "range": true,
          "refId": "C"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.30, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RENAME\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.30, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RENAME\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.30, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RENAME\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "30%",
          "range": true,
          "refId": "D"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.40, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RENAME\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.40, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RENAME\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.40, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RENAME\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "40%",
          "range": true,
          "refId": "E"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.50, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RENAME\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.50, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RENAME\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.50, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RENAME\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "50%",
          "range": true,
          "refId": "F"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.60, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RENAME\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.60, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RENAME\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.60, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RENAME\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "60%",
          "range": true,
          "refId": "G"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.70, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RENAME\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.70, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RENAME\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.70, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RENAME\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "70%",
          "range": true,
          "refId": "H"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.80, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RENAME\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.80, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RENAME\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.80, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RENAME\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "80%",
          "range": true,
          "refId": "I"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.90, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RENAME\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.90, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RENAME\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.90, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RENAME\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "90%",
          "range": true,
          "refId": "J"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.95, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RENAME\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.95, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RENAME\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.95, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RENAME\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "95%",
          "range": true,
          "refId": "K"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.99, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RENAME\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.99, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RENAME\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.99, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RENAME\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "99%",
          "range": true,
          "refId": "L"
        }
      ],
      "title": "Rename latency distribution",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_VICTORIAMETRICS}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ms"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 67
      },
      "id": 183,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.01, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RMDIR\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.01, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RMDIR\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.01, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RMDIR\", job=\"sfs-client\"}[$__rate_interval])))",
          "legendFormat": "1%",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.10, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RMDIR\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.10, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RMDIR\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.10, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RMDIR\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "10%",
          "range": true,
          "refId": "B"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.20, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RMDIR\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.20, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RMDIR\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.20, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RMDIR\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "20%",
          "range": true,
          "refId": "C"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.30, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RMDIR\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.30, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RMDIR\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.30, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RMDIR\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "30%",
          "range": true,
          "refId": "D"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.40, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RMDIR\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.40, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RMDIR\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.40, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RMDIR\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "40%",
          "range": true,
          "refId": "E"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.50, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RMDIR\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.50, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RMDIR\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.50, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RMDIR\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "50%",
          "range": true,
          "refId": "F"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.60, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RMDIR\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.60, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RMDIR\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.60, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RMDIR\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "60%",
          "range": true,
          "refId": "G"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.70, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RMDIR\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.70, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RMDIR\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.70, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RMDIR\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "70%",
          "range": true,
          "refId": "H"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.80, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RMDIR\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.80, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RMDIR\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.80, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RMDIR\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "80%",
          "range": true,
          "refId": "I"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.90, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RMDIR\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.90, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RMDIR\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.90, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RMDIR\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "90%",
          "range": true,
          "refId": "J"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.95, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RMDIR\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.95, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RMDIR\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.95, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RMDIR\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "95%",
          "range": true,
          "refId": "K"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.99, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RMDIR\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.99, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RMDIR\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.99, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"RMDIR\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "99%",
          "range": true,
          "refId": "L"
        }
      ],
      "title": "Rmdir latency distribution",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_VICTORIAMETRICS}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ms"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 75
      },
      "id": 185,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.01, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"UNLINK\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.01, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"UNLINK\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.01, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"UNLINK\", job=\"sfs-client\"}[$__rate_interval])))",
          "legendFormat": "1%",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.10, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"UNLINK\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.10, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"UNLINK\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.10, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"UNLINK\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "10%",
          "range": true,
          "refId": "B"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.20, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"UNLINK\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.20, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"UNLINK\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.20, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"UNLINK\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "20%",
          "range": true,
          "refId": "C"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.30, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"UNLINK\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.30, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"UNLINK\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.30, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"UNLINK\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "30%",
          "range": true,
          "refId": "D"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.40, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"UNLINK\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.40, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"UNLINK\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.40, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"UNLINK\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "40%",
          "range": true,
          "refId": "E"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.50, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"UNLINK\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.50, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"UNLINK\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.50, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"UNLINK\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "50%",
          "range": true,
          "refId": "F"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.60, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"UNLINK\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.60, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"UNLINK\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.60, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"UNLINK\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "60%",
          "range": true,
          "refId": "G"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.70, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"UNLINK\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.70, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"UNLINK\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.70, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"UNLINK\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "70%",
          "range": true,
          "refId": "H"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.80, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"UNLINK\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.80, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"UNLINK\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.80, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"UNLINK\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "80%",
          "range": true,
          "refId": "I"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.90, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"UNLINK\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.90, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"UNLINK\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.90, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"UNLINK\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "90%",
          "range": true,
          "refId": "J"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.95, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"UNLINK\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.95, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"UNLINK\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.95, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"UNLINK\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "95%",
          "range": true,
          "refId": "K"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.99, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"UNLINK\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.99, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"UNLINK\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.99, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"UNLINK\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "99%",
          "range": true,
          "refId": "L"
        }
      ],
      "title": "Unlink latency distribution",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_VICTORIAMETRICS}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ms"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 75
      },
      "id": 186,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.01, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"STATNS\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.01, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"STATNS\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.01, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"STATNS\", job=\"sfs-client\"}[$__rate_interval])))",
          "legendFormat": "1%",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.10, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"STATNS\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.10, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"STATNS\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.10, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"STATNS\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "10%",
          "range": true,
          "refId": "B"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.20, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"STATNS\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.20, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"STATNS\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.20, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"STATNS\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "20%",
          "range": true,
          "refId": "C"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.30, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"STATNS\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.30, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"STATNS\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.30, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"STATNS\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "30%",
          "range": true,
          "refId": "D"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.40, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"STATNS\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.40, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"STATNS\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.40, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"STATNS\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "40%",
          "range": true,
          "refId": "E"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.50, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"STATNS\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.50, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"STATNS\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.50, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"STATNS\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "50%",
          "range": true,
          "refId": "F"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.60, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"STATNS\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.60, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"STATNS\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.60, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"STATNS\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "60%",
          "range": true,
          "refId": "G"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.70, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"STATNS\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.70, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"STATNS\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.70, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"STATNS\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "70%",
          "range": true,
          "refId": "H"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.80, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"STATNS\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.80, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"STATNS\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.80, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"STATNS\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "80%",
          "range": true,
          "refId": "I"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.90, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"STATNS\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.90, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"STATNS\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.90, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"STATNS\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "90%",
          "range": true,
          "refId": "J"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.95, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"STATNS\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.95, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"STATNS\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.95, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"STATNS\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "95%",
          "range": true,
          "refId": "K"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "(histogram_quantile(0.99, sum without (instance, sfs_hostname) (rate(request_latency_ns_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"STATNS\", job=\"sfs-client\"}[$__rate_interval]))) / 1000000) or histogram_quantile(0.99, sum without (instance, sfs_hostname) (rate(request_latency_ms_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"STATNS\", job=\"sfs-client\"}[$__rate_interval]))) or histogram_quantile(0.99, sum without (instance, sfs_hostname) (rate(sfs_rpc_response_duration_bucket{cluster=\"$cluster\", nsid=\"$nsid\", method=\"STATNS\", job=\"sfs-client\"}[$__rate_interval])))",
          "hide": false,
          "legendFormat": "99%",
          "range": true,
          "refId": "L"
        }
      ],
      "title": "Statns latency distribution",
      "type": "timeseries"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 83
      },
      "id": 32,
      "panels": [],
      "title": "Request/response sizes",
      "type": "row"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_VICTORIAMETRICS}"
      },
      "gridPos": {
        "h": 1,
        "w": 12,
        "x": 0,
        "y": 84
      },
      "id": 53,
      "options": {
        "content": "",
        "mode": "markdown"
      },
      "pluginVersion": "9.0.9",
      "title": "Reads",
      "transparent": true,
      "type": "text"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_VICTORIAMETRICS}"
      },
      "gridPos": {
        "h": 1,
        "w": 12,
        "x": 12,
        "y": 84
      },
      "id": 187,
      "options": {
        "content": "",
        "mode": "markdown"
      },
      "pluginVersion": "9.0.9",
      "title": "Writes",
      "transparent": true,
      "type": "text"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_VICTORIAMETRICS}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "scaleDistribution": {
              "type": "linear"
            }
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 85
      },
      "id": 184,
      "options": {
        "calculate": false,
        "calculation": {
          "xBuckets": {
            "mode": "size"
          }
        },
        "cellGap": 0,
        "cellValues": {},
        "color": {
          "exponent": 0.5,
          "fill": "dark-orange",
          "min": 0,
          "mode": "scheme",
          "scale": "exponential",
          "scheme": "Cool",
          "steps": 128
        },
        "exemplars": {
          "color": "rgba(255,0,255,0.7)"
        },
        "filterValues": {
          "le": 1e-9
        },
        "legend": {
          "show": true
        },
        "rowsFrame": {
          "layout": "ge"
        },
        "showValue": "never",
        "tooltip": {
          "show": true,
          "yHistogram": false
        },
        "yAxis": {
          "axisPlacement": "left",
          "decimals": 0,
          "reverse": false,
          "unit": "decbytes"
        }
      },
      "pluginVersion": "9.0.9",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "sum without (instance, sfs_hostname) (rate(request_size_bytes_bucket{cluster=\"$cluster\", method=\"READ\", nsid=\"$nsid\"}[$__rate_interval])) or sum without (instance, sfs_hostname) (rate(sfs_rpc_request_size_bytes_bucket{cluster=\"$cluster\", method=\"READ\", nsid=\"$nsid\"}[$__rate_interval]))",
          "format": "heatmap",
          "legendFormat": "{{le}}",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "Read request size heatmap",
      "type": "heatmap-new"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_VICTORIAMETRICS}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "scaleDistribution": {
              "type": "linear"
            }
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 85
      },
      "id": 189,
      "options": {
        "calculate": false,
        "calculation": {
          "xBuckets": {
            "mode": "size"
          }
        },
        "cellGap": 0,
        "cellValues": {},
        "color": {
          "exponent": 0.5,
          "fill": "dark-orange",
          "min": 0,
          "mode": "scheme",
          "scale": "exponential",
          "scheme": "Cool",
          "steps": 128
        },
        "exemplars": {
          "color": "rgba(255,0,255,0.7)"
        },
        "filterValues": {
          "le": 1e-9
        },
        "legend": {
          "show": true
        },
        "rowsFrame": {
          "layout": "ge"
        },
        "showValue": "never",
        "tooltip": {
          "show": true,
          "yHistogram": false
        },
        "yAxis": {
          "axisPlacement": "left",
          "decimals": 0,
          "reverse": false,
          "unit": "decbytes"
        }
      },
      "pluginVersion": "9.0.9",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIAMETRICS}"
          },
          "editorMode": "code",
          "expr": "sum without (instance, sfs_hostname) (rate(request_size_bytes_bucket{cluster=\"$cluster\", method=\"WRITE\", nsid=\"$nsid\"}[$__rate_interval])) or sum without (instance, sfs_hostname) (rate(sfs_rpc_request_size_bytes_bucket{cluster=\"$cluster\", method=\"WRITE\", nsid=\"$nsid\"}[$__rate_interval]))",
          "format": "heatmap",
          "legendFormat": "{{le}}",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "Write request size heatmap",
      "type": "heatmap-new"
    }
  ],
  "refresh": "5s",
  "schemaVersion": 36,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "VictoriaMetrics",
          "value": "VictoriaMetrics"
        },
        "hide": 2,
        "includeAll": false,
        "multi": false,
        "name": "DS_VICTORIAMETRICS",
        "options": [],
        "query": "prometheus",
        "queryValue": "",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "type": "datasource"
      },
      {
        "current": {},
        "datasource": {
          "type": "prometheus",
          "uid": "${DS_VICTORIAMETRICS}"
        },
        "definition": "label_values({__name__=~\"request_latency_ns_count|request_latency_ms|sfs_rpc_response_duration_count\", job=\"sfs-client\", cluster=\"$cluster\"}, nsid)",
        "hide": 0,
        "includeAll": false,
        "label": "Namespace ID",
        "multi": false,
        "name": "nsid",
        "options": [],
        "query": {
          "query": "label_values({__name__=~\"request_latency_ns_count|request_latency_ms|sfs_rpc_response_duration_count\", job=\"sfs-client\", cluster=\"$cluster\"}, nsid)",
          "refId": "StandardVariableQuery"
        },
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 3,
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "prometheus",
          "uid": "${DS_VICTORIAMETRICS}"
        },
        "definition": "label_values({__name__=~\"request_latency_ns_count|request_latency_ms|sfs_rpc_response_duration_count\", job=\"sfs-client\"}, method)",
        "hide": 0,
        "includeAll": true,
        "label": "Method",
        "multi": true,
        "name": "method",
        "options": [],
        "query": {
          "query": "label_values({__name__=~\"request_latency_ns_count|request_latency_ms|sfs_rpc_response_duration_count\", job=\"sfs-client\"}, method)",
          "refId": "StandardVariableQuery"
        },
        "refresh": 1,
        "regex": "/(?:Method\\()?([^)]+)(?:\\))?$/",
        "skipUrlSync": false,
        "sort": 1,
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "prometheus",
          "uid": "${DS_VICTORIAMETRICS}"
        },
        "definition": "label_values({__name__=~\"request_latency_ns_count|request_latency_ms|sfs_rpc_response_duration_count\", job=\"sfs-client\"}, cluster)",
        "hide": 0,
        "includeAll": false,
        "label": "Cluster",
        "multi": false,
        "name": "cluster",
        "options": [],
        "query": {
          "query": "label_values({__name__=~\"request_latency_ns_count|request_latency_ms|sfs_rpc_response_duration_count\", job=\"sfs-client\"}, cluster)",
          "refId": "StandardVariableQuery"
        },
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-5m",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "SFS - Client",
  "uid": "eb0e36b5-5b6f-4cc0-ad9d-2ae722046721",
  "version": 16,
  "weekStart": ""
}
